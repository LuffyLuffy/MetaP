package SixteenS::Statistics::AlphaDiversity;
use strict;
require Exporter;
our @ISA = qw(Exporter);
our @EXPORT = qw(rank_abundance rarefaction_groups box_rarefaction anova_posthoc);

#--------------------------------------------------------
#Alpha-diversity indices were generated by these function
#--------------------------------------------------------
sub rarefaction_groups{
##this function is used to plot rarefaction curves
##we plot different groups with certain color
##Two arguements 1. rarefaction table 2. groups table
    my @tm = @_;
    die "$! \n" unless open(II,"$tm[1]");
    <II>;
    my $number = <II>;
    chomp($number);
    my @num = split(/\s+/, $number);
    $number = $#num + 1;


    my $i = 1;
    my $ins = 255/$number;

    while($i < $number)
    {
##For every catergorie samples
        die "$! \n" unless open(II,"$tm[1]");
        my %direct;
        while(<II>)
        {
            chomp;
            next if(/^#/);
            my @tem = split /\s+/;
            $direct{$tem[$i]}{$tem[0]} = 1;
        }
        close II;

##generate R script
        my $Rout = "$tm[0].Rout";
        my $rareout = "$tm[0].rarefaction.$i.pdf";

        die "$! $Rout\n" unless open(TEM,">$Rout");
        print TEM  "pdf(\"$rareout\");\n matr <- read.table(file=\"$ARGV[0]\",sep=\"\\t\",header=T);\n maxd <- 1; \n for(j in 2:dim(matr)[2]){ \ntem <- matr[,j] \ntem <- tem[!is.na(tem)]; if(maxd < max(tem)){ maxd <- max(tem)} \n }  \n y <- matr[,2]; y <- y[!is.na(y)]; x <- matr[,1]; x <- x[1:length(y)]; \nplot(x,y,type='l',col='white',ylim=c(0,maxd),xlim=c(0,max(matr[,1])), xlab=\"Number of Sequences\", ylab=\"Number of OTUS\",main=\"Rarefaction Curves For Groups\")\n";

        my $cate = 1;
        my @ts = ();
        for my $key (sort keys %direct)
        {
            my @tm =();
            for my $k(sort keys %{$direct{$key}})
            {
                push @tm, "\"$k\"";
            }
            my $t = join(",",@tm);
            my $cates = $cate * 10;

            push @ts, "\"$key\"";
           # print $t;
            print TEM "selectmatr <- matr[c($t)]\n";
            my $str = <<STD ;
            coln <- dim(selectmatr)[2]
#cl <- rgb($cates, (0:(coln-1))/coln,$ins*$i,max=255)
                for(i in 1:coln){ 
                    y <- selectmatr[,i] 
                        y <- y[!is.na(y)]
                        x <- matr[,1]
                        x <- x[1:length(y)]
                        points(x,y, col=palette()[$cate],type='l') 
                }
STD
                print TEM $str;
            $cate++;
        }

        my $legtxt = join(",",@ts);
        print TEM "\nlegend(\"topleft\",c($legtxt),pch=16, col=c(palette()[1:$cate]),title=\"Sample Group\")\ndev.off()";

        close TEM;
        `R CMD BATCH --args $Rout`;

        %direct = ();
        $i++;
    }
}##rarefaction_groups

sub box_rarefaction{
#This function plot boxplot of rarefaction 
#It is better to normanized sequences number to a certain cut
    my @tm = @_;
    die "$! \n" unless open(II,"$tm[1]");
    <II>;
    my $number = <II>;
    chomp($number);
    my @num = split(/\s+/, $number);
    $number = $#num + 1;

    my $i = 1;
    my $ins = 255/$number;

    while($i < $number)
    {
##For every catergorie samples
        die "$! \n" unless open(II,"$tm[1]");
        my %direct;
        while(<II>)
        {
            chomp;
            next if(/^#/);
            my @tem = split /\s+/;
            $direct{$tem[$i]}{$tem[0]} = 1;
        }
        close II;

##generate R script
        my $Rout = "$tm[0].box.rarefaction.$i.R";
        my $rareout = "$tm[0].box.rarefaction.$i.pdf";

        die "$! $Rout\n" unless open(TEM,">$Rout");
        print TEM  <<RSP;
pdf(\"$rareout\")
matr <- read.table(file=\"$tm[0]\",sep=\"\\t\",header=T)
maxd <- 1
for(j in 2:dim(matr)[2])
{ 
    tem <- matr[,j]
        tem <- tem[!is.na(tem)]
        if(maxd < max(tem))
        {
            maxd <- max(tem)
        }
}
y <- matr[,2]
y <- y[!is.na(y)]
x <- matr[,1]
x <- x[1:length(y)]
#plot(x,y,ann=F,ylim=c(0,maxd),xlim=c(0,max(matr[,1])), xlab=\"Number of Sequences\", ylab=\"Number of OTUS\",main=\"Boxplot Rarefaction Curves For Groups\")

RSP
        my $cate = 1;
        my @ts = ();
        for my $key (sort keys %direct)
        {
            my @tm ;
            for my $k(sort keys %{$direct{$key}})
            {
                push @tm, "\"$k\"";
            }
            my $t = join(",",@tm);
            my $cates = $cate * 10;

            push @ts, "\"$key\"";
            print TEM "selectmatr <- matr[c($t)]\n";
            my $str = <<STD;
coln <- dim(selectmatr)[2]
fac <- c() 
grp <- c()
#cl <- rgb($cates, (0:(coln-1))/coln,$ins*$i,max=255)
for(i in 1:coln){ 
y <- selectmatr[,i] 
y <- y[!is.na(y)]
x <- matr[,1]
x <- x[1:length(y)]
#points(x,y, col=palette()[$cate],type='l') 
fac <- c(fac,x)
grp <- c(grp,y)
}
if($cate == 1){
boxplot(grp~fac,col=palette()[$cate],boxwex=0.4,xlab=\"Number of Sequences\", ylab=\"Number of OTUS\",main=\"Boxplot Rarefaction Curves For Groups\")
}else
{
    boxplot(grp~fac,col=palette()[$cate],add=TRUE,boxwex=0.4)
}
STD
                print TEM $str;
            $cate++;
        }

        my $legtxt = join(",",@ts);
        #print "$legtxt\n";
        print TEM "\nlegend(\"topleft\",c($legtxt),pch=16, col=c(palette()[1:$cate]),title=\"Sample Group\")\ndev.off()";

        close TEM;
        `R CMD BATCH --args $Rout`;
        %direct = ();
        $i++;
    }#while
}#box_rarefaction

sub alpha_indices{
##this funciotn is used to generate the alpha diversity
##indices table you must make sure that mothur be installed

}#alpha_indices

sub rank_abundance{
##This function generate rank abundance curve for the data
##input 1 parameters
##The unique.name file from TSC results
    my @tm = @_;
    `cut -f 2 $tm[0] | sort -r -n  > rank.list`;
    my $tempr = "$tm[0].rank.abundant.R";
    die "$! \n" unless open(T, ">$tempr");
    print T <<STD;
#This is the R script for rank abundant curves
myvector <- read.table(file="rank.list")
len <- dim(myvector)[1]
x <- 1:len
y <- as.vector(myvector[,1])
pdf("$tm[0].rank.abundance.pdf")
plot(x,log10(y),type="l", main="Rank abundance curve", xlab="Rank number", ylab="Relative abundance of unique tags (Log10)")
dev.off()
STD
close T;
`R CMD BATCH --args $tempr`;
}#rank_abundance


sub read_stat{

#this function statistic the reads state of all the information
#the input file contain 
#1.fq
#2.fq
#primer_info.xls
#Quality Control fa list file
#Nochimera fa list file
#Output file prefix
    my @tm = @_;
    open III,"$tm[2]" || die "can not open III:$!";
    open IV,"$tm[3]" || die "can not open IV:$!";
    open V,"$tm[4]" || die "can not open V:$!";

    <III>;
    $tm[2]=~s/.xls$//;
    unless( -e $tm[2]){
        `mkdir $tm[2]`;
    }
    my %fqnum;
    my %spna;
    my %bar;
    while(<III>)
    {
        chomp;
        my @temp = split/\s+/;
        my $fbar = substr $temp[2],0,8;
        my $rbar = substr $temp[4],0,5;
        $rbar =~ tr/atgc/ATGC/;
        $bar{$temp[-1]}{f}=$fbar;
        $bar{$temp[-1]}{r}=$rbar;
##print "$fbar\n$rbar\n";die;
        open I,"$tm[0]" || die "can not open I:$!";
        open II,"$tm[1]" || die "can not open II:$!";
        `mkdir $tm[2]/$temp[-1]`;
        my $fq1 = "$tm[2]\/$temp[-1]\/$temp[-1].1.fq";
        my $fq2 = "$tm[2]\/$temp[-1]\/$temp[-1].2.fq";
        open FQ1,">$fq1" || die "can not open FQ1:$!";
        open FQ2,">$fq2" || die "can not open FQ2:$!";
        my $num = 0;
        while(<I>)
        {
            my $na1 = $_;
            my $seq1 = <I>;
            my $fpos1 = index $seq1,$fbar;
            my $rpos1 = index $seq1,$rbar;
            my $na2 = <II>;
            my $seq2 = <II>;
            my $fpos2 = index $seq2,$fbar;
            my $rpos2 = index $seq2,$rbar;

            if ((($fpos1 <=2 && $fpos1 >=0) && ($rpos2 <=2 && $rpos2 >=0))||(($rpos1 <=2 && $rpos1 >=0)&&($fpos2 <=2 && $fpos2 >=0)))
            {
                my $link1 = <I>;
##print "$liddnk1";die;
                my $link2 = <II>;
                my $qul1 = <I>;
                my $qul2 = <II>;  
                $num++;

                print FQ1 "$na1$seq1$link1$qul1";
##print  "$na1\n$seq1\n$link1\n$qul1";
                print FQ2 "$na2$seq2$link2$qul2";
            }
        }
        $fqnum{$temp[-1]} = $num; 
## print "$num";die;
        $spna{$temp[-1]} = $temp[0];
    }

    my $out = "$tm[5].seqnum.xls";

    open OUT,">$out" || die "can not open OUT:$!";

    my %tag;
    while(<IV>)
    {
        chomp;
        my @dir = split/\//;
        open TEMP,"$_" || die "can not open III:$!";
        my $num = 0;
        while (<TEMP>)
        {
            if(/^>/)
            {
                $num++;
            }
        }
        $tag{$dir[-2]}=$num; 
    }

    my %nochimera;
    my %unqfa;
    while(<V>)
    {
        chomp;
        my @temp = split/\//;
        open T,"$_" || die "can not open V:$!";
        `/root/bin/454/unique_rank.uclust.pl $_`;
        s/\.fa//;
        my $unqfa = "$_.ranked.unique.fa";
        open UQ,"$unqfa" || die "can not open UQ:$!";
        my $num = 0;
        while (<T>)
        {
            if(/^>/)
            {
                $num++;
            }
        }
        $nochimera{$temp[-2]}=$num;

        my $a = 0;
        while(<UQ>)
        {
            if (/^>/)
            {
                $a++;
            }
        }
        $unqfa{$temp[-2]} = $a;
    }

    print OUT "SampleID\tforward_barcode\treverse_barcode\tRaw_seqnum\tQC_tag\tNochimera_seqnum\tunique\texperiment_samplename\n";
    for my $i(sort keys %tag)
    {
        print OUT "$i\t$bar{$i}{f}\t$bar{$i}{r}\t$fqnum{$i}\t$tag{$i}\t$nochimera{$i}\t$unqfa{$i}\t$spna{$i}\n";
    }
}#read_stat

sub anova_posthoc{
    ##This function do anova analysis for different alpha diversity index
    ##and posthoc test for all the parameters
    ##1. The summary file contain all the index parameters 
    ##2. the groups file
    
    #add the groups information into summary file
    my @ar = @_;
    die "groups file wrong $! \n " unless open(I,"$ar[1]");
    my %temh;
    <I>;
    while(<I>)
    {
      chomp;
      my @tm = split(/\s+/, $_); 
      $temh{$tm[0]} = $tm[1];
    }
    close I;

    die "$!\n" unless open(II,"$ar[0]");
    my $head = <II>; chomp($head);
    $head = join("\t", $head,"group");
    my $of = "$ar[0].forR";
    die "$!\n" unless open(T,">$of");
    print T "$head\n";
    while(<II>)
    {
        chomp;
        my @tem = split(/\s+/, $_);
        if(exists $temh{$tem[0]}){
            my $o = join("\t", $_, $temh{$tem[0]});
            print T "$o\n";
        }else
        {
            die "wrong groups file $! \n";    
        }
    }
    close II;
###Rscript for anova and posthoc t test
    my $or = "$of.R";
    die "$! \n" unless open(TT, ">$or");
print  TT <<STD;
indext <- read.table(file="$of", header=TRUE);
attach(indext)
#for otu
library(car)
library(multcomp)
ginfo <- indext\$group

######Parametic test
#normally test qqplot
par(mfrow=c(2,2))
pdf("$of.R.qqplot.pdf")
qqPlot(lm(sobs ~ ginfo), simulate=TRUE, main="Q-Q Plot 95% confidence envelope OTU(97%) number", labels=FALSE)
qqPlot(lm(chao ~ ginfo), simulate=TRUE, main="Q-Q Plot 95% confidence envelope Chao index", labels=FALSE)
qqPlot(lm(ace ~ ginfo), simulate=TRUE, main="Q-Q Plot 95% confidence envelope Ace index", labels=FALSE)
qqPlot(lm(shannon ~ ginfo), simulate=TRUE, main="Q-Q Plot 95% confidence envelope Shannon index", labels=FALSE)
dev.off()
## Equality of variance
##Bartlett test
a1bartlett <- bartlett.test(sobs,ginfo)
a1levene <- leveneTest(sobs, ginfo)
a1 <- aov(sobs ~ ginfo)
otui <- TukeyHSD(a1)

#for chao
a2bartlett <- bartlett.test(chao,ginfo)
a2levene <- leveneTest(chao, ginfo)
a2 <- aov(chao ~ ginfo)
chaoi <- TukeyHSD(a2)

#for ace
a3bartlett <- bartlett.test(ace,ginfo)
a3levene <- leveneTest(ace, ginfo)
a3 <- aov(ace ~ ginfo)
acei <- TukeyHSD(a3)

#for shannon
a4bartlett <- bartlett.test(shannon,ginfo)
a4levene <- leveneTest(ace, ginfo)
a4 <- aov(shannon ~ ginfo)
shannoni <- TukeyHSD(a4)

pdf("$of.Tukey_HSD.test.otu.pdf")
par(mar=c(5,4,6,2))
tes <- glht(a1, linfct=mcp(ginfo="Tukey"))
plot(cld(tes, level=.05), col="yellow")
dev.off()

pdf("$of.Tukey_HSD.test.chao.pdf")
par(mar=c(5,4,6,2))
tes <- glht(a2, linfct=mcp(ginfo="Tukey"))
plot(cld(tes, level=.05), col="yellow")
dev.off()

pdf("$of.Tukey_HSD.test.ace.pdf")
par(mar=c(5,4,6,2))
tes <- glht(a3, linfct=mcp(ginfo="Tukey"))
plot(cld(tes, level=.05), col="yellow")
dev.off()

pdf("$of.Tukey_HSD.test.shannon.pdf")
par(mar=c(5,4,6,2))
tes <- glht(a4, linfct=mcp(ginfo="Tukey"))
plot(cld(tes, level=.05), col="yellow")
dev.off()

##Following statistic data
a1bartlett

a1levene 

summary(a1)

otui

a2bartlett

a2levene

summary(a2)

chaoi

a3bartlett

a3levene

summary(a3)

acei

a4bartlett

a4levene

summary(a4)

shannoni
##End

exit()
STD
 `R CMD BATCH --args $or`;

}#anova_posho
